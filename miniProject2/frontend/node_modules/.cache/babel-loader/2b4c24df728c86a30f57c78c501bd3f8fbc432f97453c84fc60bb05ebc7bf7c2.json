{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const auth = {\n  register: async (username, email, password, role, firstName = '', lastName = '') => {\n    try {\n      console.log('Registration request:', {\n        username,\n        email,\n        role\n      }); // Debug log\n      const response = await api.post('/auth/register/', {\n        username,\n        email,\n        password,\n        role,\n        first_name: firstName,\n        last_name: lastName\n      });\n      console.log('Registration response:', response.data); // Debug log\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Registration error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error); // Debug log\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        detail: 'Registration failed. Please try again.'\n      };\n    }\n  },\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login/', {\n        username,\n        password\n      });\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response4;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        throw {\n          detail: 'Invalid username or password'\n        };\n      }\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/profile/');\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  }\n};\nexport const resume = {\n  upload: async file => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n      const response = await api.post('/resumes/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n    }\n  },\n  getAnalysis: async resumeId => {\n    try {\n      const response = await api.get(`/resumes/${resumeId}/analysis/`);\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n    }\n  }\n};\nexport const jobs = {\n  search: async (searchTerm, location) => {\n    try {\n      const response = await api.get('/jobs/search/', {\n        params: {\n          search: searchTerm,\n          location\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n    }\n  },\n  getJobDetails: async jobId => {\n    try {\n      const response = await api.get(`/jobs/${jobId}/`);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message;\n    }\n  }\n};\nexport const profile = {\n  update: async userData => {\n    try {\n      const response = await api.put('/auth/profile/', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response10;\n      throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message;\n    }\n  },\n  changePassword: async (currentPassword, newPassword) => {\n    try {\n      const response = await api.post('/auth/password-reset/confirm/', {\n        current_password: currentPassword,\n        new_password: newPassword\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response11;\n      throw ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data) || error.message;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","auth","register","username","email","password","role","firstName","lastName","console","log","response","post","first_name","last_name","data","access","setItem","_error$response","_error$response2","detail","login","_error$response3","_error$response4","status","message","logout","removeItem","getCurrentUser","get","_error$response5","resume","upload","file","formData","FormData","append","_error$response6","getAnalysis","resumeId","_error$response7","jobs","search","searchTerm","location","params","_error$response8","getJobDetails","jobId","_error$response9","profile","update","userData","put","_error$response10","changePassword","currentPassword","newPassword","current_password","new_password","_error$response11"],"sources":["/Users/talanterzhan/Documents/GitHub/Django-KBTU/miniProject2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const auth = {\n  register: async (username, email, password, role, firstName = '', lastName = '') => {\n    try {\n      console.log('Registration request:', { username, email, role }); // Debug log\n      const response = await api.post('/auth/register/', {\n        username,\n        email,\n        password,\n        role,\n        first_name: firstName,\n        last_name: lastName,\n      });\n      console.log('Registration response:', response.data); // Debug log\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error.response?.data || error); // Debug log\n      throw error.response?.data || { detail: 'Registration failed. Please try again.' };\n    }\n  },\n\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login/', {\n        username,\n        password,\n      });\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      return response.data;\n    } catch (error) {\n      if (error.response?.status === 401) {\n        throw { detail: 'Invalid username or password' };\n      }\n      throw error.response?.data || error.message;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/profile/');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport const resume = {\n  upload: async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n      const response = await api.post('/resumes/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  getAnalysis: async (resumeId) => {\n    try {\n      const response = await api.get(`/resumes/${resumeId}/analysis/`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport const jobs = {\n  search: async (searchTerm, location) => {\n    try {\n      const response = await api.get('/jobs/search/', {\n        params: {\n          search: searchTerm,\n          location,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  getJobDetails: async (jobId) => {\n    try {\n      const response = await api.get(`/jobs/${jobId}/`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport const profile = {\n  update: async (userData) => {\n    try {\n      const response = await api.put('/auth/profile/', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  changePassword: async (currentPassword, newPassword) => {\n    try {\n      const response = await api.post('/auth/password-reset/confirm/', {\n        current_password: currentPassword,\n        new_password: newPassword,\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}