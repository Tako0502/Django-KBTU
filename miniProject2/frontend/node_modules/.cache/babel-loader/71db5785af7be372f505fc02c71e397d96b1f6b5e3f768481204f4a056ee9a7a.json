{"ast":null,"code":"var _jsxFileName = \"/Users/talanterzhan/Documents/GitHub/Django-KBTU/miniProject2/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if we have a token and try to get user data\n    const token = localStorage.getItem('token');\n    if (token) {\n      auth.getCurrentUser().then(userData => {\n        setCurrentUser(userData);\n      }).catch(() => {\n        // If getting user data fails, clear tokens\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Just update the user state, don't make another login request\n  const login = userData => {\n    setCurrentUser(userData);\n  };\n  const logout = () => {\n    auth.logout();\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","token","localStorage","getItem","getCurrentUser","then","userData","catch","removeItem","finally","login","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/talanterzhan/Documents/GitHub/Django-KBTU/miniProject2/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if we have a token and try to get user data\n    const token = localStorage.getItem('token');\n    if (token) {\n      auth.getCurrentUser()\n        .then(userData => {\n          setCurrentUser(userData);\n        })\n        .catch(() => {\n          // If getting user data fails, clear tokens\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Just update the user state, don't make another login request\n  const login = (userData) => {\n    setCurrentUser(userData);\n  };\n\n  const logout = () => {\n    auth.logout();\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTb,IAAI,CAACgB,cAAc,CAAC,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAI;QAChBR,cAAc,CAACQ,QAAQ,CAAC;MAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;QACX;QACAL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;QAChCN,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;MACzC,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;QACbT,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,KAAK,GAAIJ,QAAQ,IAAK;IAC1BR,cAAc,CAACQ,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBvB,IAAI,CAACuB,MAAM,CAAC,CAAC;IACbb,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMc,KAAK,GAAG;IACZf,WAAW;IACXa,KAAK;IACLC;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACrB,GAAA,CA9CWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAgDzB,eAAeH,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}