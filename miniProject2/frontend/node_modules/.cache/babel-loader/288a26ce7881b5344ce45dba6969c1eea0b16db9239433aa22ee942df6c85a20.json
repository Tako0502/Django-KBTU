{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        const response = await axios.post(`${API_URL}/auth/token/refresh/`, {\n          refresh: refreshToken\n        });\n        if (response.data.access) {\n          localStorage.setItem('token', response.data.access);\n          api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n          return api(originalRequest);\n        }\n      }\n    } catch (refreshError) {\n      // If refresh fails, clear tokens and redirect to login\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport const auth = {\n  register: async (username, email, password, role, firstName = '', lastName = '') => {\n    try {\n      const response = await api.post('/auth/register/', {\n        username,\n        email,\n        password,\n        role,\n        first_name: firstName,\n        last_name: lastName\n      });\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      if (response.data.refresh) {\n        localStorage.setItem('refreshToken', response.data.refresh);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        detail: 'Registration failed. Please try again.'\n      };\n    }\n  },\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login/', {\n        username,\n        password\n      });\n\n      // Store tokens if login is successful\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      if (response.data.refresh) {\n        localStorage.setItem('refreshToken', response.data.refresh);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response3;\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        throw {\n          detail: 'Invalid username or password'\n        };\n      }\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        detail: 'An error occurred during login'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/profile/');\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        detail: 'Failed to get user profile'\n      };\n    }\n  }\n};\nexport const resume = {\n  upload: async file => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n      const response = await api.post('/resumes/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message;\n    }\n  },\n  getAnalysis: async resumeId => {\n    try {\n      const response = await api.get(`/resumes/${resumeId}/analysis/`);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message;\n    }\n  }\n};\nexport const jobs = {\n  search: async (searchTerm, location) => {\n    try {\n      const response = await api.get('/jobs/search/', {\n        params: {\n          search: searchTerm,\n          location\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message;\n    }\n  },\n  getJobDetails: async jobId => {\n    try {\n      const response = await api.get(`/jobs/${jobId}/`);\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message;\n    }\n  }\n};\nexport const profile = {\n  update: async userData => {\n    try {\n      const response = await api.put('/auth/profile/', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response9;\n      throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message;\n    }\n  },\n  changePassword: async (currentPassword, newPassword) => {\n    try {\n      const response = await api.post('/auth/password-reset/confirm/', {\n        current_password: currentPassword,\n        new_password: newPassword\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response10;\n      throw ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","post","refresh","data","access","setItem","defaults","common","refreshError","removeItem","window","location","href","auth","register","username","email","password","role","firstName","lastName","first_name","last_name","_error$response","detail","login","_error$response2","_error$response3","logout","getCurrentUser","get","_error$response4","resume","upload","file","formData","FormData","append","_error$response5","message","getAnalysis","resumeId","_error$response6","jobs","search","searchTerm","params","_error$response7","getJobDetails","jobId","_error$response8","profile","update","userData","put","_error$response9","changePassword","currentPassword","newPassword","current_password","new_password","_error$response10"],"sources":["/Users/talanterzhan/Documents/GitHub/Django-KBTU/miniProject2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          const response = await axios.post(`${API_URL}/auth/token/refresh/`, {\n            refresh: refreshToken,\n          });\n          if (response.data.access) {\n            localStorage.setItem('token', response.data.access);\n            api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n            return api(originalRequest);\n          }\n        }\n      } catch (refreshError) {\n        // If refresh fails, clear tokens and redirect to login\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const auth = {\n  register: async (username, email, password, role, firstName = '', lastName = '') => {\n    try {\n      const response = await api.post('/auth/register/', {\n        username,\n        email,\n        password,\n        role,\n        first_name: firstName,\n        last_name: lastName,\n      });\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      if (response.data.refresh) {\n        localStorage.setItem('refreshToken', response.data.refresh);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { detail: 'Registration failed. Please try again.' };\n    }\n  },\n\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login/', {\n        username,\n        password,\n      });\n      \n      // Store tokens if login is successful\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      if (response.data.refresh) {\n        localStorage.setItem('refreshToken', response.data.refresh);\n      }\n      \n      return response.data;\n    } catch (error) {\n      if (error.response?.status === 401) {\n        throw { detail: 'Invalid username or password' };\n      }\n      throw error.response?.data || { detail: 'An error occurred during login' };\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/profile/');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || { detail: 'Failed to get user profile' };\n    }\n  },\n};\n\nexport const resume = {\n  upload: async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n      const response = await api.post('/resumes/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  getAnalysis: async (resumeId) => {\n    try {\n      const response = await api.get(`/resumes/${resumeId}/analysis/`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport const jobs = {\n  search: async (searchTerm, location) => {\n    try {\n      const response = await api.get('/jobs/search/', {\n        params: {\n          search: searchTerm,\n          location,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  getJobDetails: async (jobId) => {\n    try {\n      const response = await api.get(`/jobs/${jobId}/`);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport const profile = {\n  update: async (userData) => {\n    try {\n      const response = await api.put('/auth/profile/', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  changePassword: async (currentPassword, newPassword) => {\n    try {\n      const response = await api.post('/auth/password-reset/confirm/', {\n        current_password: currentPassword,\n        new_password: newPassword,\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}